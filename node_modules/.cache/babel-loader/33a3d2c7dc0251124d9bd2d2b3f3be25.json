{"ast":null,"code":"var _jsxFileName = \"/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrainingTable() {\n  _s();\n\n  const [training, setTraining] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://customerrest.herokuapp.com/gettrainings', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => setTraining(data.content)).catch(err => console.error(err));\n  }, []);\n  const columns = [{\n    headerName: \"Date\",\n    field: 'data.0.date',\n    sortable: true,\n    ilter: true,\n    cellRenderer: params => {\n      return dayjs(params.value).format('MM/DD/YYYY h:mm A');\n    }\n  }, {\n    headerName: \"Duration\",\n    field: 'data.0.duration',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'data.0.activity',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'data.0.customer.lastname',\n    sortable: true,\n    filter: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-material\",\n    style: {\n      height: 600,\n      width: '90%',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: gettrainings,\n      columnDefs: columns,\n      pagination: true,\n      paginationPageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TrainingTable, \"NN+rBXgXw8ZKoGxCZAl5gIudOxQ=\");\n\n_c = TrainingTable;\nexport default TrainingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingTable\");","map":{"version":3,"sources":["/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js"],"names":["React","AgGridReact","dayjs","TrainingTable","training","setTraining","useState","useEffect","fetch","method","headers","then","response","json","data","content","catch","err","console","error","columns","headerName","field","sortable","ilter","cellRenderer","params","value","format","filter","height","width","margin","gettrainings"],"mappings":";;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAO,2CAAP;AACA,OAAO,qDAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAI;AAChBC,IAAAA,KAAK,CAAC,iDAAD,EAAoD;AACrDC,MAAAA,MAAM,EAAE,KAD6C;AAErDC,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ;AAF6C,KAApD,CAAL,CAMCC,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOMG,IAAI,IAAIT,WAAW,CAACS,IAAI,CAACC,OAAN,CAPzB,EAQCC,KARD,CAQOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CARd;AASH,GAVD,EAUG,EAVH;AAYA,QAAMG,OAAO,GAAE,CACX;AACIC,IAAAA,UAAU,EAAC,MADf;AAEIC,IAAAA,KAAK,EAAC,aAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE,IAJX;AAKIC,IAAAA,YAAY,EAAEC,MAAM,IAAI;AACpB,aAAOxB,KAAK,CAACwB,MAAM,CAACC,KAAR,CAAL,CAAoBC,MAApB,CAA2B,mBAA3B,CAAP;AACC;AAPT,GADW,EAUX;AACIP,IAAAA,UAAU,EAAC,UADf;AAEIC,IAAAA,KAAK,EAAC,iBAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIM,IAAAA,MAAM,EAAE;AAJZ,GAVW,EAgBX;AACIP,IAAAA,KAAK,EAAC,iBADV;AAEIC,IAAAA,QAAQ,EAAE,IAFd;AAGIM,IAAAA,MAAM,EAAE;AAHZ,GAhBW,EAqBX;AACIP,IAAAA,KAAK,EAAC,0BADV;AAEIC,IAAAA,QAAQ,EAAE,IAFd;AAGIM,IAAAA,MAAM,EAAE;AAHZ,GArBW,CAAf;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE,KAArB;AAA4BC,MAAAA,MAAM,EAAE;AAApC,KAA1C;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEC,YADb;AAEI,MAAA,UAAU,EAAEb,OAFhB;AAGI,MAAA,UAAU,EAAE,IAHhB;AAII,MAAA,kBAAkB,EAAE;AAJxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtDQjB,a;;KAAAA,a;AAwDT,eAAeA,aAAf","sourcesContent":["import React  from 'react'\nimport {AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\nimport dayjs from 'dayjs'\n\nfunction TrainingTable() {\n    const [training, setTraining] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch('https://customerrest.herokuapp.com/gettrainings', {\n            method: 'GET',\n            headers:{\n                'Content-type': 'application/json' \n            }\n        })\n        .then(response => response.json())\n        .then(data => setTraining(data.content))\n        .catch(err => console.error(err))\n    }, [])\n\n    const columns= [\n        {   \n            headerName:\"Date\", \n            field:'data.0.date', \n            sortable: true, \n            ilter: true,\n            cellRenderer: params => {\n                return dayjs(params.value).format('MM/DD/YYYY h:mm A') \n                }\n        },\n        {\n            headerName:\"Duration\", \n            field:'data.0.duration', \n            sortable: true, \n            filter: true\n        },\n        {\n            field:'data.0.activity', \n            sortable: true, \n            filter: true\n        },\n        {\n            field:'data.0.customer.lastname', \n            sortable: true, \n            filter: true\n        }\n    ]\n\n    return(\n        <div className=\"ag-theme-material\" style={{height: 600, width: '90%', margin: 'auto'}}>\n            <AgGridReact\n                rowData={gettrainings}\n                columnDefs={columns}\n                pagination={true}\n                paginationPageSize={10}\n            />\n        </div>\n    )\n\n}\n\nexport default TrainingTable"]},"metadata":{},"sourceType":"module"}