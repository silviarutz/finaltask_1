{"ast":null,"code":"var _jsxFileName = \"/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrainingTable() {\n  _s();\n\n  const [training, setTraining] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://customerrest.herokuapp.com/api/gettrainings').then(response => response.json()).then(data => setTraining(data.content)).catch(err => console.error(err));\n  }, []);\n  const columns = [{\n    field: 'date',\n    sortable: true,\n    filter: true,\n    cellRenderer: params => {\n      return dayjs(params.value).format('MM/DD/YYYY h:mm A');\n    }\n  }, {\n    field: 'duration',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'activity',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'customer',\n    sortable: true,\n    filter: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-material\",\n    style: {\n      height: 600,\n      width: '90%',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: training,\n      columnDefs: columns,\n      pagination: true,\n      paginationPageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TrainingTable, \"NN+rBXgXw8ZKoGxCZAl5gIudOxQ=\");\n\n_c = TrainingTable;\nexport default TrainingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingTable\");","map":{"version":3,"sources":["/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js"],"names":["React","useState","useEffect","AgGridColumn","AgGridReact","dayjs","TrainingTable","training","setTraining","fetch","then","response","json","data","content","catch","err","console","error","columns","field","sortable","filter","cellRenderer","params","value","format","height","width","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,eAAxC;AACA,OAAO,2CAAP;AACA,OAAO,qDAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAI;AAChBO,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACC,OAAN,CAFzB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHd;AAIH,GALD,EAKG,EALH;AAOA,QAAMG,OAAO,GAAE,CACX;AAACC,IAAAA,KAAK,EAAC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,IAAzB;AAA+BC,IAAAA,MAAM,EAAE,IAAvC;AACIC,IAAAA,YAAY,EAAEC,MAAM,IAAI;AACpB,aAAOnB,KAAK,CAACmB,MAAM,CAACC,KAAR,CAAL,CAAoBC,MAApB,CAA2B,mBAA3B,CAAP;AACC;AAHT,GADW,EAMX;AAACN,IAAAA,KAAK,EAAC,UAAP;AAAmBC,IAAAA,QAAQ,EAAE,IAA7B;AAAmCC,IAAAA,MAAM,EAAE;AAA3C,GANW,EAOX;AAACF,IAAAA,KAAK,EAAC,UAAP;AAAmBC,IAAAA,QAAQ,EAAE,IAA7B;AAAmCC,IAAAA,MAAM,EAAE;AAA3C,GAPW,EAQX;AAACF,IAAAA,KAAK,EAAC,UAAP;AAAmBC,IAAAA,QAAQ,EAAE,IAA7B;AAAmCC,IAAAA,MAAM,EAAE;AAA3C,GARW,CAAf;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE,KAArB;AAA4BC,MAAAA,MAAM,EAAE;AAApC,KAA1C;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEtB,QADb;AAEI,MAAA,UAAU,EAAEY,OAFhB;AAGI,MAAA,UAAU,EAAE,IAHhB;AAII,MAAA,kBAAkB,EAAE;AAJxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCQb,a;;KAAAA,a;AAkCT,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect}  from 'react'\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\nimport dayjs from 'dayjs'\n\nfunction TrainingTable() {\n    const [training, setTraining] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch('https://customerrest.herokuapp.com/api/gettrainings')\n        .then(response => response.json())\n        .then(data => setTraining(data.content))\n        .catch(err => console.error(err))\n    }, [])\n\n    const columns= [\n        {field:'date', sortable: true, filter: true,\n            cellRenderer: params => {\n                return dayjs(params.value).format('MM/DD/YYYY h:mm A') \n                }\n        },\n        {field:'duration', sortable: true, filter: true},\n        {field:'activity', sortable: true, filter: true},\n        {field:'customer', sortable: true, filter: true}\n    ]\n\n    return(\n        <div className=\"ag-theme-material\" style={{height: 600, width: '90%', margin: 'auto'}}>\n            <AgGridReact\n                rowData={training}\n                columnDefs={columns}\n                pagination={true}\n                paginationPageSize={10}\n            />\n        </div>\n    )\n\n}\n\nexport default TrainingTable"]},"metadata":{},"sourceType":"module"}