[{"/Users/silyr/firsttry/frontend/finaltask/src/index.js":"1","/Users/silyr/firsttry/frontend/finaltask/src/reportWebVitals.js":"2","/Users/silyr/firsttry/frontend/finaltask/src/App.js":"3","/Users/silyr/firsttry/frontend/finaltask/src/components/customerTable.js":"4","/Users/silyr/firsttry/frontend/finaltask/src/components/trainingTable.js":"5","/Users/silyr/firsttry/frontend/finaltask/src/components/CustomerTable.js":"6","/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js":"7"},{"size":500,"mtime":1634201656249,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1634201656252,"results":"10","hashOfConfig":"9"},{"size":993,"mtime":1634215094679,"results":"11","hashOfConfig":"9"},{"size":1293,"mtime":1634212544245,"results":"12","hashOfConfig":"9"},{"size":1018,"mtime":1634212539551,"results":"13","hashOfConfig":"9"},{"size":1328,"mtime":1636035768384,"results":"14","hashOfConfig":"9"},{"size":1688,"mtime":1636037623804,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1r7d2e5",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":2,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/silyr/firsttry/frontend/finaltask/src/index.js",[],["33","34"],"/Users/silyr/firsttry/frontend/finaltask/src/reportWebVitals.js",[],"/Users/silyr/firsttry/frontend/finaltask/src/App.js",[],"/Users/silyr/firsttry/frontend/finaltask/src/components/customerTable.js",["35","36","37"],"import React  from 'react'\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\n\nfunction customerTable() {\n    const [customer, setCustomer] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch('https://customerrest.herokuapp.com/api/customers')\n        .then(response => response.json())\n        .then(data => setCustomer(data.content))\n        .catch(err => console.error(err))\n    }, [])\n\n    const columns= [\n        {field:'firstname', sortable: true, filter: true},\n        {field:'lastname', sortable: true, filter: true},\n        {field:'streetadress', sortable: true, filter: true},\n        {field:'postcode', sortable: true, filter: true},\n        {field:'city', sortable: true, filter: true},\n        {field:'email', sortable: true, filter: true},\n        {field:'phone', sortable: true, filter: true}\n    ]\n\n    return(\n        <div className=\"ag-theme-material\" style={{height: 600, width: '90%', margin: 'auto'}}>\n            <AgGridReact\n                rowData={customer}\n                columnDefs={columns}\n                pagination={true}\n                paginationPageSize={10}\n            />\n        </div>\n    )\n\n}\n\nexport default customerTable","/Users/silyr/firsttry/frontend/finaltask/src/components/trainingTable.js",["38","39","40","41","42","43","44","45"],"import React, {useState, useEffect}  from 'react'\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\n\nfunction trainingTable() {\n    const [training, setTraining] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch('https://customerrest.herokuapp.com/api/trainings')\n        .then(response => response.json())\n        .then(data => setTraining(data.content))\n        .catch(err => console.error(err))\n    }, [])\n\n    const columns= [\n        {field:'brand', sortable: true, filter: true},\n        {field:'model', sortable: true, filter: true},\n        {field:'color', sortable: true, filter: true},\n        {field:'fuel', width: 120, sortable: true, filter: true},\n        {field:'year', width:100, sortable: true, filter: true},\n        {field:'price', width: 100, sortable: true, filter: true}\n    ]\n\n    return(\n        <div><h6>Training</h6></div>\n    )\n\n}\n\nexport default trainingTable","/Users/silyr/firsttry/frontend/finaltask/src/components/CustomerTable.js",[],"/Users/silyr/firsttry/frontend/finaltask/src/components/TrainingTable.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":9,"nodeType":"52","messageId":"53","endLine":2,"endColumn":21},{"ruleId":"54","severity":2,"message":"55","line":7,"column":37,"nodeType":"56","endLine":7,"endColumn":51},{"ruleId":"54","severity":2,"message":"57","line":9,"column":5,"nodeType":"56","endLine":9,"endColumn":20},{"ruleId":"50","severity":1,"message":"58","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":24},{"ruleId":"50","severity":1,"message":"59","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":2,"column":9,"nodeType":"52","messageId":"53","endLine":2,"endColumn":21},{"ruleId":"50","severity":1,"message":"60","line":2,"column":23,"nodeType":"52","messageId":"53","endLine":2,"endColumn":34},{"ruleId":"50","severity":1,"message":"61","line":7,"column":12,"nodeType":"52","messageId":"53","endLine":7,"endColumn":20},{"ruleId":"54","severity":2,"message":"62","line":7,"column":37,"nodeType":"56","endLine":7,"endColumn":51},{"ruleId":"54","severity":2,"message":"63","line":9,"column":5,"nodeType":"56","endLine":9,"endColumn":20},{"ruleId":"50","severity":1,"message":"64","line":16,"column":11,"nodeType":"52","messageId":"53","endLine":16,"endColumn":18},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'AgGridColumn' is defined but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"React.useState\" is called in function \"customerTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","MemberExpression","React Hook \"React.useEffect\" is called in function \"customerTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'useState' is defined but never used.","'useEffect' is defined but never used.","'AgGridReact' is defined but never used.","'training' is assigned a value but never used.","React Hook \"React.useState\" is called in function \"trainingTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"React.useEffect\" is called in function \"trainingTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'columns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]